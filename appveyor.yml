environment:
  global:
    BZIP2_VER: 1.0.8.0
    EXPAT_VER: 2.4.1
    PROJ_VER: 7.0.1
    ZLIB_VER: 1.2.11
    LUA_VER: 5.3.4
    LUA_INCLUDE_DIR: C:\lua\include
    LUA_LIBRARIES: C:\lua\lua53.lib
    LUA_DLL: C:\lua\lua53.dll
    WINGETOPT_VER: v0.95
    GETOPT_INCLUDE_DIR: C:\wingetopt\src
    GETOPT_LIBRARY: C:\wingetopt\build\wingetopt.lib
    BZIP2_INCLUDE_DIR: C:\bzip2\dev
    BZIP2_LIBRARY: C:\bzip2\dll
    BOOST_PATH: C:\Libraries\boost_1_77_0
    POSTGRESQL_VER: 11.2
    TESTS_POSTGRESQL_ROOT: C:\Progra~1\PostgreSQL\9.6
    POSTGIS_VER: 2.4.3
    POSTGIS_URL: "https://osm2pgsql.org/ci/winbuild/postgis-bundle-pg96-2.4.3x64.zip"
    PGUSER: postgres
    PGPASSWORD: Password12!

os: Visual Studio 2019

services:
  - postgresql96

clone_folder: c:\osm2pgsql

clone_depth: 1

init:
  - git config --global core.autocrlf input
  - set bz2_dll_url=https://github.com/philr/bzip2-windows/releases/download/v%BZIP2_VER%/bzip2-dll-%BZIP2_VER%-win-x64.zip
  - set bz2_dev_url=https://github.com/philr/bzip2-windows/releases/download/v%BZIP2_VER%/bzip2-dev-%BZIP2_VER%-win-x64.zip
  - set vcvarsall_arg=amd64
  - set conda_path=C:\Miniconda36-x64\Scripts
  - set python_path=C:\Python38-x64
  - set conda_library_path=C:\Miniconda36-x64\envs\osm2pgsql\Library
  - set lua_url=https://osm2pgsql.org/ci/winbuild/lua_x64.zip
  - set build_type=Release
  - '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"'

install:
  - set PATH=%TESTS_POSTGRESQL_ROOT%\bin;%python_path%;%PATH%;%conda_path%
  - cd c:\
  - conda config --set always_yes yes
  - conda create --name osm2pgsql
  - activate osm2pgsql
  - conda install expat=%EXPAT_VER% proj=%PROJ_VER% zlib=%ZLIB_VER% postgresql=%POSTGRESQL_VER%
  - ps: if (!(Test-Path "C:\bzip2_dll_x64.zip")){(new-object net.webclient).DownloadFile($env:bz2_dll_url, "C:\bzip2_dll_x64.zip")}
  - 7z x -y C:\bzip2_dll_x64.zip -o%BZIP2_LIBRARY%
  - ps: if (!(Test-Path "C:\bzip2_dev_x64.zip")){(new-object net.webclient).DownloadFile($env:bz2_dev_url, "C:\bzip2_dev_x64.zip")}
  - 7z x -y C:\bzip2_dev_x64.zip -o%BZIP2_INCLUDE_DIR%
  - ps: if (!(Test-Path "C:\lua_x64.zip")){(new-object net.webclient).DownloadFile($env:lua_url, "C:\lua_x64.zip")}
  - 7z x -y C:\lua_x64.zip -oC:\lua
  - ps: if (!(Test-Path "C:\postgis.zip")){(new-object net.webclient).DownloadFile($env:POSTGIS_URL, "C:\postgis.zip")}
  - 7z x C:\postgis.zip -oC:\postgis
  - xcopy /e /y /q C:\postgis\postgis-bundle-pg96-2.4.3x64 %TESTS_POSTGRESQL_ROOT%
  - git clone https://github.com/alex85k/wingetopt -b %WINGETOPT_VER% C:\wingetopt
  - python -V
  - python -m pip install psycopg2

before_build:
  - cd C:\wingetopt
  - mkdir build
  - cd build
  - cmake .. -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=%build_type%
  - nmake

build_script:
  - mkdir c:\osm2pgsql\build
  - cd c:\osm2pgsql\build
  - >
    cmake .. -LA -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=%build_type% -DBUILD_TESTS=ON
    -DLUA_INCLUDE_DIR=%LUA_INCLUDE_DIR% -DLUA_LIBRARIES=%LUA_LIBRARIES%
    -DGETOPT_INCLUDE_DIR=%GETOPT_INCLUDE_DIR% -DGETOPT_LIBRARY=%GETOPT_LIBRARY%
    -DBOOST_ROOT=%BOOST_PATH% -DBoost_USE_STATIC_LIBS=ON
    -DBZIP2_INCLUDE_DIR=%BZIP2_INCLUDE_DIR%
    -DBZIP2_LIBRARIES=%BZIP2_INCLUDE_DIR%\libbz2.lib
  - nmake

after_build:
  - mkdir osm2pgsql-bin
  - copy /y *.exe osm2pgsql-bin
  - copy /y ..\*.style osm2pgsql-bin
  - copy /y ..\*.lua osm2pgsql-bin
  - copy /y %conda_library_path%\bin\libpq.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\zlib.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\expat.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\gssapi64.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\libcrypto-1_1-x64.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\libssl-1_1-x64.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\comerr64.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\krb5_64.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\k5sprt64.dll osm2pgsql-bin
  - copy /y %conda_library_path%\bin\wshelp64.dll osm2pgsql-bin
  - copy /y %BZIP2_LIBRARY%\libbz2.dll osm2pgsql-bin
  - copy /y %LUA_DLL% osm2pgsql-bin
  - 7z a c:\osm2pgsql\osm2pgsql_%build_type%_x64.zip osm2pgsql-bin -tzip

before_test:
  - cd c:\
  - mkdir temp
  - cacls temp /T /E /G Users:F
  - cacls temp /T /E /G "Network Service":F
  - |
    psql -c "CREATE TABLESPACE tablespacetest LOCATION 'c:/temp'"
  - set PATH=c:\osm2pgsql\build\osm2pgsql-bin;%PATH%
  - set PROJ_LIB=%conda_library_path%\share\proj

test_script:
  - cd c:\osm2pgsql\build
  #- ctest -VV -L NoDB
  - ctest -VV -LE FlatNodes # enable when Postgis will be available

artifacts:
  - path: osm2pgsql_%build_type%_x64.zip

cache:
  - C:\lua_x64.zip -> appveyor.yml
  - C:\bzip2_dev_x64.zip -> appveyor.yml
  - C:\bzip2_dll_x64.zip -> appveyor.yml
  - C:\postgis.zip -> appveyor.yml
